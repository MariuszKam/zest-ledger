name: CI

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

permissions:
  contents: read

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: ci/build
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0
      - uses: ./.github/actions/gradle-bootstrap
      - uses: gradle/actions/setup-gradle@v4
      - name: Spotless Check
        run: ./gradlew spotlessCheck --stacktrace
      - name: Compile (assemble -x test)
        run: ./gradlew assemble -x test --stacktrace
      - name: Run Arch-Test
        run: ./gradlew :modules:architecture-tests:test --stacktrace

  jacoco:
    name: ci/unit-jacoco
    runs-on: ubuntu-latest
    timeout-minutes: 10
    needs: build
    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0
      - uses: ./.github/actions/gradle-bootstrap
      - uses: gradle/actions/setup-gradle@v4
      - name: Run Unit + JaCoCo
        run: ./gradlew jacocoTest --stacktrace
      - name: Upload Jacoc reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: jacoco-reports
          path: |
            **/build/reports/jacoco/test/html
            **/build/reports/tests/test
            **/build/reports/jacoco/test
          if-no-files-found: warn
          retention-days: 7

  pitest:
    name: ci/mutation-pitest
    runs-on: ubuntu-latest
    timeout-minutes: 15
    needs: build
    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0
      - uses: ./.github/actions/gradle-bootstrap
      - uses: gradle/actions/setup-gradle@v4
      - name: Run PIT
        run: ./gradlew pitest --stacktrace
      - name: Upload PIT reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: pit-reports
          path: |
            **/build/reports/pitest
          if-no-files-found: warn
          retention-days: 7

  depcheck:
    name: depcheck + sbom
    runs-on: ubuntu-latest
    timeout-minutes: 30
    needs: build
    env:
      NVD_API_KEY: ${{ secrets.NVD_API_KEY }}
    steps:
      - uses: actions/checkout@v5
      - name: Gradle wrapper + JDK
        uses: ./.github/actions/gradle-bootstrap
      - uses: gradle/actions/setup-gradle@v4
      - name: Cache Dependency-Check data
        uses: actions/cache@v4
        with:
          path: ~/.gradle/dependency-check
          key: ${{ runner.os }}-dc-data-${{ hashFiles('gradle/libs.versions.toml') }}
          restore-keys: ${{ runner.os }}-dc-data-
      - name: Security gate (aggregate + SBOM)
        run: ./gradlew securityGate --stacktrace
      - name: Upload depcheck & SBOM
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: depcheck-sbom
          path: |
            **/build/reports/dependency-check-report.*
            **/build/reports/bom.*
          if-no-files-found: ignore
          retention-days: 7

  sonar_main:
    name: ci/sonar
    runs-on: ubuntu-latest
    timeout-minutes: 10
    if: ${{ vars.SONAR_ON_MAIN == 'true' }}
    needs: jacoco
    env:
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
    steps:
      - uses: actions/checkout@v5
        with: { fetch-depth: 0 }
      - uses: ./.github/actions/gradle-bootstrap
      - uses: gradle/actions/setup-gradle@v4
      - name: Download JaCoCo XMLs
        uses: actions/download-artifact@v4
        with:
          name: jacoco-reports
          path: .
      - name: Sonar
        run: ./gradlew sonar -i --stacktrace
