name: CI

on:
  pull_request:

permissions:
  contents: read
  pull-requests: read

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  changes:
    runs-on: ubuntu-latest
    outputs:
      filters: ${{ steps.shared.outputs.changes }}
      modules: ${{ steps.filter.outputs.changes }}
    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0
      - uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: .github/filters-quality.yaml
      - uses: dorny/paths-filter@v3
        id: shared
        with:
          filters: .github/filters-shared.yaml
      - name: Checkout module
        run: |
          echo "result: ${{ needs.changes.outputs.modules }}"
          echo "condition: ${{ needs.changes.outputs.modules != '[]' }}"

  spotless:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - name: Gradle wrapper + JDK
        uses: ./.github/actions/gradle-bootstrap
      - uses: gradle/actions/setup-gradle@v4
      - run: ./gradlew spotlessCheck --stacktrace

  quality:
    name: quality â€¢ ${{ matrix.module }}
    runs-on: ubuntu-latest
    needs: [changes]
    if: ${{ needs.changes.outputs.modules != "" }}
    strategy:
      fail-fast: false
      matrix:
        module: ${{ fromJSON(needs.changes.outputs.modules) }}
    steps:
      - uses: actions/checkout@v5
      - name: Gradle wrapper + JDK
        uses: ./.github/actions/gradle-bootstrap
      - uses: gradle/actions/setup-gradle@v4
      - name: Unit + JaCoCo
        run: ./gradlew :${{ matrix.module }}:check --stacktrace
      - name: Upload unit reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: tests-${{ matrix.module }}
          path: ${{ matrix.module }}/build/reports/tests/test/**/*
          if-no-files-found: ignore
      - name: Upload JaCoCo reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: jacoco-${{ matrix.module }}
          path: |
            ${{ matrix.module }}/build/reports/jacoco/test/**/*
            ${{ matrix.module }}/build/jacoco/**/*
          if-no-files-found: ignore

  archtests:
    name: architecture-tests
    runs-on: ubuntu-latest
    needs: spotless
    steps:
      - uses: actions/checkout@v5
      - name: Gradle wrapper + JDK
        uses: ./.github/actions/gradle-bootstrap
      - uses: gradle/actions/setup-gradle@v4
      - run: ./gradlew :modules:architecture-tests:test --stacktrace
      - name: Upload ArchUnit reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: archtests
          path: modules/architecture-tests/build/reports/tests/test/**/*
          if-no-files-found: ignore

  summary:
    name: summary
    runs-on: ubuntu-latest
    needs: [ changes, spotless, quality, archtests ]
    if: always()
    steps:
      - name: Plan
        run: |
          echo "filters: ${{ needs.changes.outputs.filters }}"
          echo "modules: ${{ needs.changes.outputs.modules }}"
          echo "result: ${{ needs.quality.result }}"
      - name: Check if any job failed
        if: ${{ needs.spotless.result == 'failure' || needs.quality.result == 'failure' || needs.archtests.result == 'failure' }}
        run: exit 1
